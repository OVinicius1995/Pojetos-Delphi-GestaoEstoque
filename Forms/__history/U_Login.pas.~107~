unit U_Login;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TfrmLogin = class(TForm)
    edtNome: TEdit;
    edtSenha: TEdit;
    btnLogar: TBitBtn;
    btnCancelar: TBitBtn;
    Label1: TLabel;
    Label2: TLabel;
    fdqBuscaTipouser: TFDQuery;
    dsBuscaTipoUser: TDataSource;
    procedure FormShow(Sender: TObject);
    procedure btnLogarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure abreTelaSelecionaTipo();
  private
    { Private declarations }
  public
    { Public declarations }
    var tipoUser :String;
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.dfm}

uses U_DM, U_Principal, u_Tipo;

procedure TfrmLogin.abreTelaSelecionaTipo;
begin
      try
        frmPrincipal := TfrmPrincipal.Create(Self);
         frmPrincipal.Show;
      finally
         frmPrincipal.Free;
         frmPrincipal :=nil;
      end;

end;

procedure TfrmLogin.btnCancelarClick(Sender: TObject);
begin
    Application.Terminate;
end;

procedure TfrmLogin.btnLogarClick(Sender: TObject);

var atribuicoes :Integer;

begin

    if (edtNome.Text = '') then
    begin
         Application.MessageBox('Minha joia cê deixou o usuário em branco, dá essa força aí pra nóis!','Copera irmão!', MB_OK + MB_ICONASTERISK);
         abort;
    end

    else

    if (edtSenha.Text = '') then
    begin
         Application.MessageBox('Meu consagrado agora cê deixou a senha em branco, cê tá é me tirando irmão, prestenção no que tu bota aí, se não botam nocê!','Copera irmão!', MB_OK + MB_ICONASTERISK);
         abort;
    end

    else

    dmConexao.fdqLogin.Close;
    dmConexao.fdqLogin.SQL.Add('');
    dmConexao.fdqLogin.SQL.Clear();
    dmConexao.fdqLogin.SQL.Add('SELECT * FROM USUARIO');
    dmConexao.fdqLogin.SQL.Add('WHERE NOME =:UNOME AND SENHA =:USENHA');
    dmConexao.fdqLogin.ParamByName('UNOME').AsString   := edtNome.Text;
    dmConexao.fdqLogin.ParamByName('USENHA').AsInteger := strtoint(edtSenha.Text);

    // Busca as atribuições do usuário
    fdqBuscaTipouser.Close;
    fdqBuscaTipouser.SQL.Add('');
    fdqBuscaTipouser.SQL.Clear();
    fdqBuscaTipouser.SQL.Add('SELECT TIPO FROM USUARIO');
    fdqBuscaTipouser.SQL.Add('WHERE NOME =:TNOME');
    fdqBuscaTipouser.ParamByName('TNOME').AsString := edtNome.Text;
    fdqBuscaTipouser.Open();
    dmConexao.fdqLogin.Open;



      if dmConexao.fdqLogin.RecordCount = 0 then
    begin
      Application.MessageBox('Nome ou senha incorretos.','Zoia!', MB_OK + MB_ICONWARNING);
      abort;
    end;


    if fdqBuscaTipouser.RecordCount > 1 then

    begin

        MessageDlg('Você possui mais de um tipo para logar, ecolhA um deles e prossiga!',TMsgDlgType.mtInformation,[mbOk],0);

        abreTelaSelecionaTipo();

        dmConexao.usuario      := dmConexao.fdqLogin.FieldByName('NOME').AsString;

         frmLogin.Hide;
         MessageDlg('Cola no baguio' + ' ' + dmConexao.usuario + ' ' + 'tu é bem vindo aqui!', mtConfirmation, [mbOk],0);
         frmPrincipal := TfrmPrincipal.Create(Self);
         frmPrincipal.Show;

    end;

     if fdqBuscaTipouser.RecordCount = 1 then
    begin

        dmConexao.usuario      := dmConexao.fdqLogin.FieldByName('NOME').AsString;
        dmConexao.tipo_usuario := dmConexao.fdqLogin.FieldByName('TIPO').AsString;


         frmPrincipal := TfrmPrincipal.Create(Self);
         frmPrincipal.Show;
         MessageDlg('Cola no baguio' + ' ' + dmConexao.usuario + ' ' + 'tu é bem vindo aqui!', mtConfirmation, [mbOk],0);
         frmLogin.Hide;
    end;






end;

procedure TfrmLogin.FormShow(Sender: TObject);
begin

    edtNome.SetFocus();
    edtNome.Clear;
    edtSenha.Clear;



end;

end.
