unit U_Compras;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, U_MovimentoPadrao, Data.DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  Vcl.Grids, Vcl.DBGrids, Vcl.DBCtrls, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Vcl.Mask, Vcl.ComCtrls;

type
  TfrmCadastroDeCompras = class(TfrmPadraoMovimento)
    fdqQueryPadraoID_COMPRA: TIntegerField;
    fdqQueryPadraoID_FORNECEDOR: TIntegerField;
    fdqQueryPadraoUSUARIO: TStringField;
    fdqQueryPadraoID_FORMA_PGTO: TIntegerField;
    fdqQueryPadraoVALOR: TFMTBCDField;
    fdqQueryPadraoCADASTRO: TDateField;
    Label7: TLabel;
    dbIcompra: TDBEdit;
    Label9: TLabel;
    dbUsuario: TDBEdit;
    Label10: TLabel;
    Label11: TLabel;
    dbValor: TDBEdit;
    Label12: TLabel;
    dbIdcadastro: TDBEdit;
    cmbIdFormaPgto: TComboBox;
    cmdIdFornec: TComboBox;
    fdq_FormaPgto: TFDQuery;
    dtsFormapgto: TDataSource;
    q_PadraoItemID_FORNECEDOR: TIntegerField;
    fdq_FormaPgtoID_FORMA_PGTO: TIntegerField;
    q_PadraoItemNOME: TStringField;
    edtNomeFornecedor: TEdit;
    edtFormaPGTO: TEdit;
    fdq_FormaPgtoDESCRICAO: TStringField;
    Label8: TLabel;
    Label1: TLabel;
    dsItensCompra: TDataSource;
    fdq_Produto: TFDQuery;
    fdq_ProdutoID_PRODUTO: TIntegerField;
    fdq_ProdutoDESCRICAO: TStringField;
    fdq_ProdutoESTOQUE: TFMTBCDField;
    fdq_ProdutoVL_CUSTO: TFMTBCDField;
    fdq_ItensCompra: TFDQuery;
    DBEdit1: TDBEdit;
    Label3: TLabel;
    DBEdit2: TDBEdit;
    Label4: TLabel;
    DBEdit3: TDBEdit;
    Label5: TLabel;
    DBEdit4: TDBEdit;
    Label6: TLabel;
    DBEdit5: TDBEdit;
    Label13: TLabel;
    DBEdit6: TDBEdit;
    Label14: TLabel;
    DBEdit7: TDBEdit;
    fdq_ItensCompraID_SEQUENCIA: TIntegerField;
    fdq_ItensCompraID_COMPRA: TIntegerField;
    fdq_ItensCompraID_PRODUTO: TIntegerField;
    fdq_ItensCompraQTDE: TFMTBCDField;
    fdq_ItensCompraVL_CUSTO: TFMTBCDField;
    fdq_ItensCompraDESCONTO: TFMTBCDField;
    fdq_ItensCompraTOTAL_ITEM: TFMTBCDField;
    Label2: TLabel;
    dbIdProduto: TDBEdit;
    Label15: TLabel;
    dbQtde: TDBEdit;
    Label16: TLabel;
    dbVlCusto: TDBEdit;
    Label17: TLabel;
    dbDesconto: TDBEdit;
    Label18: TLabel;
    dbTotalItem: TDBEdit;
    fdq_ItensCompraSUBTOTAL: TAggregateField;
    procedure btnNovoClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure btnGravarClick(Sender: TObject);
    procedure btnAtualizarClick(Sender: TObject);
    procedure cmdIdFornecChange(Sender: TObject);
    procedure cmbIdFormaPgtoChange(Sender: TObject);
    procedure bibItemClick(Sender: TObject);
    procedure dbIdProdutoExit(Sender: TObject);
    procedure bibOkClick(Sender: TObject);
    procedure bibExcluirClick(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmCadastroDeCompras: TfrmCadastroDeCompras;

implementation

{$R *.dfm}

uses U_DM;

procedure TfrmCadastroDeCompras.bibExcluirClick(Sender: TObject);
var nomeProd : string;
begin

  if Application.MessageBox('Deseja remover este item da lista?','Removendo da lista',MB_YESNOCANCEL + MB_ICONQUESTION) = mrYes then
    begin

        if  fdq_Produto.Locate('ID_PRODUTO',fdq_ItensCompraID_PRODUTO.AsInteger,[]) then

          begin
             nomeProd := '';
             fdq_Produto.Edit;
             fdq_Produto.FieldByName('ESTOQUE').AsFloat := fdq_Produto.FieldByName('ESTOQUE').AsFloat - fdq_ItensCompraQTDE.AsFloat;
             fdq_Produto.Refresh;
             fdq_ItensCompra.Delete;



                fdq_Produto.SQL.Text := 'SELECT * from PRODUTO WHERE ID_PRODUTO=:IDs_PRODUTO';
                fdq_Produto.ParamByName('IDs_PRODUTO').Value:= fdq_ItensCompraID_PRODUTO.AsInteger;
                fdq_Produto.Open();
                nomeProd := fdq_Produto.FieldByName('DESCRICAO').text;

             MessageDlg('O item:' + '  ' + nomeProd + ' ' +'foi removido da lista com sucesso!',mtConfirmation,[mbOk],0);
          end

          else
            begin
              abort;
            end;

    end;


end;


procedure TfrmCadastroDeCompras.bibItemClick(Sender: TObject);

var ID_SEQUENCIA_I : Integer;
begin
  //inherited;

    fdq_ItensCompra.Open;
    fdq_ItensCompra.Last;
    ID_SEQUENCIA_I := fdq_ItensCompraID_SEQUENCIA.AsInteger +1;
    fdq_ItensCompra.Append;
   // dbIdProduto.Text := ID_SEQUENCIA_I.ToString;
    fdq_ItensCompraID_SEQUENCIA.AsInteger := ID_SEQUENCIA_I;
   // dbIdProduto.SetFocus;




end;

procedure TfrmCadastroDeCompras.bibOkClick(Sender: TObject);
begin

  fdqQueryPadrao.Edit;
  fdqQueryPadraoVALOR.AsFloat := fdq_ItensCompra.AggFields.FieldByName('SUBTOTAL').Value;
  fdqQueryPadrao.Post;



  fdq_ItensCompra.First;
  while not fdq_ItensCompra.Eof do
    begin

      if fdq_Produto.Locate('ID_PRODUTO',fdq_ItensCompraID_PRODUTO.AsInteger,[]) then
        begin
         fdq_Produto.Edit;
         fdq_Produto.FieldByName('ESTOQUE').AsFloat := fdq_Produto.FieldByName('ESTOQUE').AsFloat + fdq_ItensCompraQTDE.AsFloat;
         fdq_ItensCompra.Next;
        end;

         fdq_Produto.Refresh;

    end;
          MessageDlg('Estoque atualizado com sucesso!',TMsgDlgType.mtConfirmation,[mbOk],0);
end;

procedure TfrmCadastroDeCompras.btnAtualizarClick(Sender: TObject);
begin
//  inherited;
      fdqQueryPadraoID_FORNECEDOR.AsString := cmdIdFornec.Text;
      fdqQueryPadraoID_FORMA_PGTO.AsString := cmbIdFormaPgto.Text;
      fdqQueryPadrao.Refresh;
      Application.MessageBox('Registro atualizado com sucesso!','Atualizado', + MB_OK + MB_ICONINFORMATION);
      cmdIdFornec.Clear;
      cmbIdFormaPgto.Clear;
      edtNomeFornecedor.Clear;
      edtFormaPGTO.Clear;
end;

procedure TfrmCadastroDeCompras.btnGravarClick(Sender: TObject);
begin
 // inherited;
   fdqQueryPadraoID_FORNECEDOR.AsString := cmdIdFornec.Text;
   fdqQueryPadraoID_FORMA_PGTO.AsString := cmbIdFormaPgto.Text;
   fdqQueryPadrao.Post;
   Application.MessageBox('Registro gravado com sucesso!','Gravado', MB_OK + MB_ICONEXCLAMATION);

   cmdIdFornec.Clear;
   cmbIdFormaPgto.Clear;
end;

procedure TfrmCadastroDeCompras.btnNovoClick(Sender: TObject);
begin
  inherited;

 { q_PadraoItemCADASTRO.AsDateTime := Date;
  q_PadraoItemUSUARIO.AsString    := 'Teste';
  }
  fdqQueryPadraoCADASTRO.AsDateTime    := Date;
  fdqQueryPadraoUSUARIO.AsString       := 'Teste';
  cmdIdFornec.SetFocus;

end;

procedure TfrmCadastroDeCompras.cmbIdFormaPgtoChange(Sender: TObject);
begin
  inherited;

  fdq_FormaPgto.SQL.Text := 'SELECT ID_FORMA_PGTO,DESCRICAO from FORMA_PGTO WHERE ID_FORMA_PGTO=:IDs_FORMA_PGTO';
  fdq_FormaPgto.ParamByName('IDs_FORMA_PGTO').Value:= cmbIdFormaPgto.Text;
  fdq_FormaPgto.Open();
  edtFormaPGTO.Text:=fdq_FormaPgto.FieldByName('DESCRICAO').text;

end;

procedure TfrmCadastroDeCompras.cmdIdFornecChange(Sender: TObject);
var teste : string;
begin
  inherited;

  q_PadraoItem.SQL.Text := 'SELECT ID_FORNECEDOR,NOME from FORNECEDOR WHERE ID_FORNECEDOR=:IDs_FORNECEDOR';
  q_PadraoItem.ParamByName('IDs_FORNECEDOR').Value:= cmdIdFornec.Text;
  q_PadraoItem.Open();
  edtNomeFornecedor.Text:=q_PadraoItem.FieldByName('NOME').text;

end;


procedure TfrmCadastroDeCompras.dbIdProdutoExit(Sender: TObject);
begin
  //inherited;
    if   fdq_ItensCompraID_PRODUTO.AsInteger > 0   then

    if   fdq_Produto.Locate('ID_PRODUTO',fdq_ItensCompra.FieldByName('ID_PRODUTO').AsInteger,[]) then
    begin
      fdq_ItensCompraQTDE.AsFloat     := 1;
      fdq_ItensCompraDESCONTO.AsFloat := 0;
      fdq_ItensCompraVL_CUSTO.AsFloat := fdq_Produto.FieldByName('vl_custo').AsFloat;
      fdq_ItensCompraTOTAL_ITEM.AsFloat := (fdq_ItensCompraQTDE.AsFloat * fdq_ItensCompraVL_CUSTO.AsFloat) - (fdq_ItensCompraDESCONTO.AsFloat);
      fdq_ItensCompra.Post;
      bibItem.SetFocus;
    end

    else
    begin
      MessageDlg('Produto não encontrado', TMsgDlgType.mtInformation,[mbOk],0);
      fdq_ItensCompra.Cancel;
    end;

end;

procedure TfrmCadastroDeCompras.FormActivate(Sender: TObject);
begin
  inherited;
  //  q_PadraoItem.SQL.Clear;
  //    q_PadraoItem.SQL.Add('SELECT ID_FORMA_PGTO from FORMA_PGTO');
     q_PadraoItem.Open();
     fdq_FormaPgto.Open();
     q_PadraoItem.First;
     fdq_FormaPgto.First;

  while not q_PadraoItem.Eof do

  begin

  try

  cmdIdFornec.Items.Add(q_PadraoItemID_FORNECEDOR.Value.ToString);

  cmbIdFormaPgto.Items.Add(fdq_FormaPgtoID_FORMA_PGTO.Value.ToString);
  q_PadraoItem.Next;
  fdq_FormaPgto.Next;

  finally


  end;




  end;

  end;


end.


